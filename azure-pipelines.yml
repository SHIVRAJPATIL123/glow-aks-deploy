trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  resourceGroupName: 'Az-104'
  location: 'eastus'

steps:
- script: |
    echo "Installing Terraform..."
    curl -s -o terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
    unzip terraform.zip
    sudo mv terraform /usr/local/bin/terraform
    terraform version
  displayName: 'Install Terraform CLI'

- script: |
    echo "Authenticating to Azure..."
    export ARM_CLIENT_ID="${ARM_CLIENT_ID}"
    export ARM_CLIENT_SECRET="${ARM_CLIENT_SECRET}"
    export ARM_SUBSCRIPTION_ID="${ARM_SUBSCRIPTION_ID}"
    export ARM_TENANT_ID="${ARM_TENANT_ID}"

    terraform init
    terraform validate
  displayName: 'Terraform Init and Validate'

- script: |
    export ARM_CLIENT_ID="${ARM_CLIENT_ID}"
    export ARM_CLIENT_SECRET="${ARM_CLIENT_SECRET}"
    export ARM_SUBSCRIPTION_ID="${ARM_SUBSCRIPTION_ID}"
    export ARM_TENANT_ID="${ARM_TENANT_ID}"

    terraform plan -out=tfplan \
      -var="resource_group_name=${resourceGroupName}" \
      -var="location=${location}"
  displayName: 'Terraform Plan'

- script: |
    export ARM_CLIENT_ID="${ARM_CLIENT_ID}"
    export ARM_CLIENT_SECRET="${ARM_CLIENT_SECRET}"
    export ARM_SUBSCRIPTION_ID="${ARM_SUBSCRIPTION_ID}"
    export ARM_TENANT_ID="${ARM_TENANT_ID}"

    terraform apply -input=false tfplan
  displayName: 'Terraform Apply'
  condition: succeeded()

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  environment: 'dev'

stages:
  - stage: TerraformInitPlan
    jobs:
      - job: InitAndPlan
        steps:
          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'TerraformServiceConnection'
              backendAzureRmResourceGroupName: 'Az-104'
              backendAzureRmStorageAccountName: 'glowsatf'
              backendAzureRmContainerName: 'sacont'
              backendAzureRmKey: 'terraform.tfstate'

          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'TerraformServiceConnection'

  - stage: TerraformApply
    displayName: 'Terraform Apply with Manual Approval'
    dependsOn: TerraformInitPlan
    condition: succeeded()
    jobs:
      - deployment: ApplyJob
        environment: dev-apply   # <-- This is the environment name (must be created in Azure DevOps)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: TerraformTask@5
                  inputs:
                    provider: 'azurerm'
                    command: 'apply'
                    environmentServiceNameAzureRM: 'TerraformServiceConnection'

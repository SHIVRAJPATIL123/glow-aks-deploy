trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.5.7'
  resourceGroupName: 'Az-104'
  location: 'eastus'

steps:
# ✅ Install Terraform
- task: TerraformInstaller@1
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: '$(terraformVersion)'

# ✅ Test Azure Login
- task: AzureCLI@2
  displayName: 'Test Azure CLI Login'
  inputs:
    azureSubscription: 'TerraformServiceConnection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    addSpnToEnvironment: true
    inlineScript: |
      echo "✅ Azure login successful!"
      az account show

# ✅ Terraform Init
- task: TerraformTaskV4@4
  displayName: 'Terraform Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'TerraformServiceConnection'
    backendAzureRmResourceGroupName: 'my-backend-rg'        # <-- Replace
    backendAzureRmStorageAccountName: 'mytfstorageacct'     # <-- Replace
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'

# ✅ Terraform Plan
- task: TerraformTaskV4@4
  displayName: 'Terraform Plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'TerraformServiceConnection'
    vars: |
      resource_group_name=$(resourceGroupName)
      location=$(location)
    commandOptions: '-out=tfplan'

# ✅ Terraform Apply
- task: TerraformTaskV4@4
  displayName: 'Terraform Apply'
  condition: succeeded()
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'TerraformServiceConnection'
    commandOptions: 'tfplan'

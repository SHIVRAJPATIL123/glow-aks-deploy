trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  terraformVersion: '1.6.6'

stages:
- stage: TerraformInitPlan
  displayName: "Terraform Init & Plan"
  jobs:
  - job: Plan
    displayName: "Terraform Init and Plan"
    steps:
    - checkout: self

    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      inputs:
        terraformVersion: $(terraformVersion)

    - task: AzureCLI@2
      displayName: "Terraform Init and Plan"
      inputs:
        azureSubscription: 'TerraformServiceConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        workingDirectory: '$(Build.SourcesDirectory)'
        inlineScript: |
          terraform init -input=false
          terraform plan -input=false -var-file="terraform.tfvars"

- stage: TerraformApply
  displayName: "Terraform Apply"
  dependsOn: TerraformInitPlan
  condition: succeeded()
  jobs:
  - deployment: Apply
    displayName: "Apply Terraform"
    environment: approval-environment  # <- Approval required here
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: TerraformInstaller@1
            inputs:
              terraformVersion: $(terraformVersion)

          - task: AzureCLI@2
            displayName: "Terraform Apply"
            inputs:
              azureSubscription: 'TerraformServiceConnection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              workingDirectory: '$(Build.SourcesDirectory)'
              inlineScript: |
                terraform apply -auto-approve -input=false -var-file="terraform.tfvars"
